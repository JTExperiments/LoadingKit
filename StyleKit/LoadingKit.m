//
//  LoadingKit.m
//  LoadingKit
//
//  Created by James on 24/10/14.
//  Copyright (c) 2014 CompanyName. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "LoadingKit.h"


@implementation LoadingKit

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawLoadingWithTintColor: (UIColor*)tintColor rounds: (CGFloat)rounds progress: (CGFloat)progress minWidth: (CGFloat)minWidth maxWidth: (CGFloat)maxWidth diameter: (CGFloat)diameter
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Variable Declarations
    CGFloat rotation = -360 * rounds * progress;
    CGFloat degree = fmod(rotation, 360);
    CGFloat endAngle = (sin((degree + 270) * M_PI/180) + 1) / 2.0 * 90;
    CGFloat strokeWidth = (sin((rotation / rounds + 270) * M_PI/180) + 1 + minWidth) * maxWidth;
    CGFloat center = -diameter / 2.0;
    CGFloat offset = diameter / 2.0 + maxWidth * 2;

    //// Outer Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, offset, offset);
    CGContextRotateCTM(context, -(rotation + 1080) * M_PI / 180);

    CGRect outerRect = CGRectMake(center, center, diameter, diameter);
    UIBezierPath* outerPath = UIBezierPath.bezierPath;
    [outerPath addArcWithCenter: CGPointMake(CGRectGetMidX(outerRect), CGRectGetMidY(outerRect)) radius: CGRectGetWidth(outerRect) / 2 startAngle: -(endAngle + 115) * M_PI/180 endAngle: -65 * M_PI/180 clockwise: YES];

    [tintColor setStroke];
    outerPath.lineWidth = strokeWidth;
    [outerPath stroke];

    CGContextRestoreGState(context);
}

+ (void)drawLoadingPlayground
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0.5 green: 0.8 blue: 0.941 alpha: 1];

    //// Symbol Drawing
    CGRect symbolRect = CGRectMake(0, 0, 50, 50);
    CGContextSaveGState(context);
    UIRectClip(symbolRect);
    CGContextTranslateCTM(context, symbolRect.origin.x, symbolRect.origin.y);
    CGContextScaleCTM(context, symbolRect.size.width / 200, symbolRect.size.height / 200);

    [LoadingKit drawLoadingWithTintColor: color rounds: 3 progress: 1 minWidth: 0 maxWidth: 2 diameter: 50];
    CGContextRestoreGState(context);
}

@end
